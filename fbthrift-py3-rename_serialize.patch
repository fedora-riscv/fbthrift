From 91bd6e4d99dc397411ebe44d799f4e7c7ddfd3a1 Mon Sep 17 00:00:00 2001
From: Michel Salim <michel@fb.com>
Date: Mon, 12 Jul 2021 16:55:09 -0700
Subject: [PATCH] [py3] avoid clash with GCC 11's `_serialize` macro

GCC 11 introduces a `_serialize` macro, so we can't have a method of the
same name, as it generates a C function of the same name.

(An alternative is to parenthesize the call instead, but I don't know
how to get Cython to generate that.)

Signed-off-by: Michel Salim <michel@fb.com>
---
 .../generate/templates/py3/types.pyx.mustache |  2 +-
 .../fixtures/adapter/gen-py3/module/types.pyx |  4 +-
 .../gen-py3/module/types.pyx                  |  6 +--
 .../test/fixtures/enumstrict/module/types.pyx |  4 +-
 .../gen-py3/module/types.pyx                  |  2 +-
 .../fixtures/basic/gen-py3/module/types.pyx   |  6 +--
 .../complex-union/gen-py3/module/types.pyx    | 16 +++---
 .../constants/gen-py3/module/types.pyx        | 16 +++---
 .../empty-struct/gen-py3/module/types.pyx     |  4 +-
 .../includes/gen-py3/includes/types.pyx       |  2 +-
 .../gen-py3/matching_struct_names/types.pyx   |  4 +-
 .../includes/gen-py3/module/types.pyx         |  2 +-
 .../includes/gen-py3/transitive/types.pyx     |  2 +-
 .../mcpp2-compare/gen-py3/includes/types.pyx  |  4 +-
 .../mcpp2-compare/gen-py3/module/types.pyx    | 26 +++++-----
 .../fixtures/mixin/gen-py3/module/types.pyx   |  8 +--
 .../namespace/gen-py3/hsmodule/types.pyx      |  2 +-
 .../namespacing/test/module/module/types.pyx  |  2 +-
 .../optionals/gen-py3/module/types.pyx        |  6 +--
 .../fixtures/py3/gen-py3/module/types.pyx     | 10 ++--
 .../qualified/gen-py3/module0/types.pyx       |  2 +-
 .../qualified/gen-py3/module1/types.pyx       |  2 +-
 .../qualified/gen-py3/module2/types.pyx       |  4 +-
 .../fixtures/refs/gen-py3/module/types.pyx    | 26 +++++-----
 .../fixtures/req-opt/gen-py3/module/types.pyx |  2 +-
 .../fixtures/sink/gen-py3/module/types.pyx    |  8 +--
 .../gen-py3/module/types.pyx                  |  4 +-
 .../transitive-deps/gen-py3/a/types.pyx       |  2 +-
 .../transitive-deps/gen-py3/c/types.pyx       |  2 +-
 .../fixtures/types/gen-py3/module/types.pyx   | 50 +++++++++----------
 thrift/lib/py3/serializer.pyx                 |  2 +-
 thrift/lib/py3/types.pxd                      |  2 +-
 thrift/lib/py3/types.pyx                      |  2 +-
 .../SimpleJSONToThriftTest.py                 |  6 +--
 thrift/test/py/SerializationTest.py           | 20 ++++----
 thrift/test/py/UTF8StringTest.py              |  4 +-
 36 files changed, 133 insertions(+), 133 deletions(-)

diff --git a/thrift/compiler/generate/templates/py3/types.pyx.mustache b/thrift/compiler/generate/templates/py3/types.pyx.mustache
index b633d8761..a8a33532f 100644
--- a/thrift/compiler/generate/templates/py3/types.pyx.mustache
+++ b/thrift/compiler/generate/templates/py3/types.pyx.mustache
@@ -393,7 +393,7 @@ cdef class {{struct:name}}(thrift.py3.types.Union):
         self._fbthrift_struct_size = {{struct:size}}
 
     {{^struct:exception?}}
-    cdef _fbthrift_iobuf.IOBuf _serialize({{struct:name}} self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_({{struct:name}} self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[c{{struct:name}}](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/adapter/gen-py3/module/types.pyx b/thrift/compiler/test/fixtures/adapter/gen-py3/module/types.pyx
index 64c5e461b..c1b7efde0 100644
--- a/thrift/compiler/test/fixtures/adapter/gen-py3/module/types.pyx
+++ b/thrift/compiler/test/fixtures/adapter/gen-py3/module/types.pyx
@@ -182,7 +182,7 @@ cdef class Foo(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 7
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(Foo self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(Foo self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cFoo](self._cpp_obj.get(), proto))
@@ -300,7 +300,7 @@ cdef class Bar(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 4
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(Bar self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(Bar self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cBar](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/basic-annotations/gen-py3/module/types.pyx b/thrift/compiler/test/fixtures/basic-annotations/gen-py3/module/types.pyx
index 4eb7a69cb..d0db74fb3 100644
--- a/thrift/compiler/test/fixtures/basic-annotations/gen-py3/module/types.pyx
+++ b/thrift/compiler/test/fixtures/basic-annotations/gen-py3/module/types.pyx
@@ -174,7 +174,7 @@ cdef class MyStructNestedAnnotation(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(MyStructNestedAnnotation self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(MyStructNestedAnnotation self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cMyStructNestedAnnotation](self._cpp_obj.get(), proto))
@@ -292,7 +292,7 @@ cdef class MyStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 6
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(MyStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(MyStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cMyStruct](self._cpp_obj.get(), proto))
@@ -386,7 +386,7 @@ cdef class SecretStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(SecretStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(SecretStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cSecretStruct](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/basic-enum/gen-py3/test/fixtures/enumstrict/module/types.pyx b/thrift/compiler/test/fixtures/basic-enum/gen-py3/test/fixtures/enumstrict/module/types.pyx
index 32cabc97a..e46f3056a 100644
--- a/thrift/compiler/test/fixtures/basic-enum/gen-py3/test/fixtures/enumstrict/module/types.pyx
+++ b/thrift/compiler/test/fixtures/basic-enum/gen-py3/test/fixtures/enumstrict/module/types.pyx
@@ -1,4 +1,4 @@
-#
+/
 # Autogenerated by Thrift
 #
 # DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
@@ -268,7 +268,7 @@ cdef class MyStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(MyStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(MyStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cMyStruct](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/basic-stack-arguments/gen-py3/module/types.pyx b/thrift/compiler/test/fixtures/basic-stack-arguments/gen-py3/module/types.pyx
index 4db0904e2..c7c609e5c 100644
--- a/thrift/compiler/test/fixtures/basic-stack-arguments/gen-py3/module/types.pyx
+++ b/thrift/compiler/test/fixtures/basic-stack-arguments/gen-py3/module/types.pyx
@@ -180,7 +180,7 @@ cdef class MyStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(MyStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(MyStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cMyStruct](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/basic/gen-py3/module/types.pyx b/thrift/compiler/test/fixtures/basic/gen-py3/module/types.pyx
index a740a1866..bbc83c554 100644
--- a/thrift/compiler/test/fixtures/basic/gen-py3/module/types.pyx
+++ b/thrift/compiler/test/fixtures/basic/gen-py3/module/types.pyx
@@ -248,7 +248,7 @@ cdef class MyStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 7
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(MyStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(MyStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cMyStruct](self._cpp_obj.get(), proto))
@@ -323,7 +323,7 @@ cdef class MyDataItem(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 0
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(MyDataItem self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(MyDataItem self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cMyDataItem](self._cpp_obj.get(), proto))
@@ -472,7 +472,7 @@ cdef class MyUnion(thrift.py3.types.Union):
     def __cinit__(self):
         self._fbthrift_struct_size = 3
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(MyUnion self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(MyUnion self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cMyUnion](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/complex-union/gen-py3/module/types.pyx b/thrift/compiler/test/fixtures/complex-union/gen-py3/module/types.pyx
index 3036e80e7..30a65c355 100644
--- a/thrift/compiler/test/fixtures/complex-union/gen-py3/module/types.pyx
+++ b/thrift/compiler/test/fixtures/complex-union/gen-py3/module/types.pyx
@@ -464,7 +464,7 @@ cdef class ComplexUnion(thrift.py3.types.Union):
     def __cinit__(self):
         self._fbthrift_struct_size = 6
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(ComplexUnion self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(ComplexUnion self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cComplexUnion](self._cpp_obj.get(), proto))
@@ -597,7 +597,7 @@ cdef class ListUnion(thrift.py3.types.Union):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(ListUnion self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(ListUnion self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cListUnion](self._cpp_obj.get(), proto))
@@ -730,7 +730,7 @@ cdef class DataUnion(thrift.py3.types.Union):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(DataUnion self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(DataUnion self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cDataUnion](self._cpp_obj.get(), proto))
@@ -834,7 +834,7 @@ cdef class Val(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 3
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(Val self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(Val self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cVal](self._cpp_obj.get(), proto))
@@ -965,7 +965,7 @@ cdef class ValUnion(thrift.py3.types.Union):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(ValUnion self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(ValUnion self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cValUnion](self._cpp_obj.get(), proto))
@@ -1098,7 +1098,7 @@ cdef class VirtualComplexUnion(thrift.py3.types.Union):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(VirtualComplexUnion self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(VirtualComplexUnion self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cVirtualComplexUnion](self._cpp_obj.get(), proto))
@@ -1175,7 +1175,7 @@ cdef class NonCopyableStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(NonCopyableStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(NonCopyableStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cNonCopyableStruct](self._cpp_obj.get(), proto))
@@ -1285,7 +1285,7 @@ cdef class NonCopyableUnion(thrift.py3.types.Union):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(NonCopyableUnion self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(NonCopyableUnion self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cNonCopyableUnion](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/constants/gen-py3/module/types.pyx b/thrift/compiler/test/fixtures/constants/gen-py3/module/types.pyx
index eaf2ea8e6..d08043905 100644
--- a/thrift/compiler/test/fixtures/constants/gen-py3/module/types.pyx
+++ b/thrift/compiler/test/fixtures/constants/gen-py3/module/types.pyx
@@ -350,7 +350,7 @@ cdef class Internship(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 4
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(Internship self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(Internship self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cInternship](self._cpp_obj.get(), proto))
@@ -444,7 +444,7 @@ cdef class Range(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(Range self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(Range self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cRange](self._cpp_obj.get(), proto))
@@ -538,7 +538,7 @@ cdef class struct1(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(struct1 self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(struct1 self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cstruct1](self._cpp_obj.get(), proto))
@@ -648,7 +648,7 @@ cdef class struct2(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 4
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(struct2 self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(struct2 self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cstruct2](self._cpp_obj.get(), proto))
@@ -750,7 +750,7 @@ cdef class struct3(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 3
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(struct3 self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(struct3 self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cstruct3](self._cpp_obj.get(), proto))
@@ -854,7 +854,7 @@ cdef class struct4(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 3
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(struct4 self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(struct4 self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cstruct4](self._cpp_obj.get(), proto))
@@ -1009,7 +1009,7 @@ cdef class union1(thrift.py3.types.Union):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(union1 self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(union1 self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cunion1](self._cpp_obj.get(), proto))
@@ -1202,7 +1202,7 @@ cdef class union2(thrift.py3.types.Union):
     def __cinit__(self):
         self._fbthrift_struct_size = 4
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(union2 self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(union2 self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cunion2](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/empty-struct/gen-py3/module/types.pyx b/thrift/compiler/test/fixtures/empty-struct/gen-py3/module/types.pyx
index ff9632deb..5d4b7a9b7 100644
--- a/thrift/compiler/test/fixtures/empty-struct/gen-py3/module/types.pyx
+++ b/thrift/compiler/test/fixtures/empty-struct/gen-py3/module/types.pyx
@@ -153,7 +153,7 @@ cdef class Empty(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 0
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(Empty self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(Empty self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cEmpty](self._cpp_obj.get(), proto))
@@ -248,7 +248,7 @@ cdef class Nada(thrift.py3.types.Union):
     def __cinit__(self):
         self._fbthrift_struct_size = 0
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(Nada self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(Nada self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cNada](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/includes/gen-py3/includes/types.pyx b/thrift/compiler/test/fixtures/includes/gen-py3/includes/types.pyx
index 4da5a7f33..d00ea7582 100644
--- a/thrift/compiler/test/fixtures/includes/gen-py3/includes/types.pyx
+++ b/thrift/compiler/test/fixtures/includes/gen-py3/includes/types.pyx
@@ -142,7 +142,7 @@ cdef class Included(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(Included self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(Included self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cIncluded](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/includes/gen-py3/matching_struct_names/types.pyx b/thrift/compiler/test/fixtures/includes/gen-py3/matching_struct_names/types.pyx
index e91fbc357..aea607353 100644
--- a/thrift/compiler/test/fixtures/includes/gen-py3/matching_struct_names/types.pyx
+++ b/thrift/compiler/test/fixtures/includes/gen-py3/matching_struct_names/types.pyx
@@ -134,7 +134,7 @@ cdef class MyStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(MyStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(MyStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cMyStruct](self._cpp_obj.get(), proto))
@@ -248,7 +248,7 @@ cdef class Combo(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 4
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(Combo self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(Combo self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cCombo](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/includes/gen-py3/module/types.pyx b/thrift/compiler/test/fixtures/includes/gen-py3/module/types.pyx
index 036de6303..da06d655d 100644
--- a/thrift/compiler/test/fixtures/includes/gen-py3/module/types.pyx
+++ b/thrift/compiler/test/fixtures/includes/gen-py3/module/types.pyx
@@ -150,7 +150,7 @@ cdef class MyStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 3
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(MyStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(MyStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cMyStruct](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/includes/gen-py3/transitive/types.pyx b/thrift/compiler/test/fixtures/includes/gen-py3/transitive/types.pyx
index 8195d8962..c73662b7c 100644
--- a/thrift/compiler/test/fixtures/includes/gen-py3/transitive/types.pyx
+++ b/thrift/compiler/test/fixtures/includes/gen-py3/transitive/types.pyx
@@ -132,7 +132,7 @@ cdef class Foo(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(Foo self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(Foo self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cFoo](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/mcpp2-compare/gen-py3/includes/types.pyx b/thrift/compiler/test/fixtures/mcpp2-compare/gen-py3/includes/types.pyx
index e80052954..42aa6ce11 100644
--- a/thrift/compiler/test/fixtures/mcpp2-compare/gen-py3/includes/types.pyx
+++ b/thrift/compiler/test/fixtures/mcpp2-compare/gen-py3/includes/types.pyx
@@ -174,7 +174,7 @@ cdef class AStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(AStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(AStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cAStruct](self._cpp_obj.get(), proto))
@@ -265,7 +265,7 @@ cdef class AStructB(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(AStructB self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(AStructB self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cAStructB](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/mcpp2-compare/gen-py3/module/types.pyx b/thrift/compiler/test/fixtures/mcpp2-compare/gen-py3/module/types.pyx
index 42454b4bc..4b840afc5 100644
--- a/thrift/compiler/test/fixtures/mcpp2-compare/gen-py3/module/types.pyx
+++ b/thrift/compiler/test/fixtures/mcpp2-compare/gen-py3/module/types.pyx
@@ -391,7 +391,7 @@ cdef class Empty(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 0
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(Empty self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(Empty self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cEmpty](self._cpp_obj.get(), proto))
@@ -481,7 +481,7 @@ cdef class ASimpleStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(ASimpleStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(ASimpleStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cASimpleStruct](self._cpp_obj.get(), proto))
@@ -569,7 +569,7 @@ cdef class ASimpleStructNoexcept(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(ASimpleStructNoexcept self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(ASimpleStructNoexcept self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cASimpleStructNoexcept](self._cpp_obj.get(), proto))
@@ -711,7 +711,7 @@ cdef class MyStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 9
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(MyStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(MyStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cMyStruct](self._cpp_obj.get(), proto))
@@ -852,7 +852,7 @@ cdef class SimpleUnion(thrift.py3.types.Union):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(SimpleUnion self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(SimpleUnion self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cSimpleUnion](self._cpp_obj.get(), proto))
@@ -1495,7 +1495,7 @@ cdef class ComplexUnion(thrift.py3.types.Union):
     def __cinit__(self):
         self._fbthrift_struct_size = 27
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(ComplexUnion self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(ComplexUnion self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cComplexUnion](self._cpp_obj.get(), proto))
@@ -2180,7 +2180,7 @@ cdef class containerStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 46
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(containerStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(containerStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[ccontainerStruct](self._cpp_obj.get(), proto))
@@ -2293,7 +2293,7 @@ cdef class MyIncludedStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 4
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(MyIncludedStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(MyIncludedStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cMyIncludedStruct](self._cpp_obj.get(), proto))
@@ -2702,7 +2702,7 @@ cdef class AnnotatedStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 40
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(AnnotatedStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(AnnotatedStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cAnnotatedStruct](self._cpp_obj.get(), proto))
@@ -2800,7 +2800,7 @@ cdef class ComplexContainerStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(ComplexContainerStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(ComplexContainerStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cComplexContainerStruct](self._cpp_obj.get(), proto))
@@ -2894,7 +2894,7 @@ cdef class FloatStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(FloatStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(FloatStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cFloatStruct](self._cpp_obj.get(), proto))
@@ -3055,7 +3055,7 @@ cdef class FloatUnion(thrift.py3.types.Union):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(FloatUnion self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(FloatUnion self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cFloatUnion](self._cpp_obj.get(), proto))
@@ -3145,7 +3145,7 @@ cdef class AllRequiredNoExceptMoveCtrStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(AllRequiredNoExceptMoveCtrStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(AllRequiredNoExceptMoveCtrStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cAllRequiredNoExceptMoveCtrStruct](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/mixin/gen-py3/module/types.pyx b/thrift/compiler/test/fixtures/mixin/gen-py3/module/types.pyx
index e5b70354f..1a2df4bd2 100644
--- a/thrift/compiler/test/fixtures/mixin/gen-py3/module/types.pyx
+++ b/thrift/compiler/test/fixtures/mixin/gen-py3/module/types.pyx
@@ -132,7 +132,7 @@ cdef class Mixin1(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(Mixin1 self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(Mixin1 self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cMixin1](self._cpp_obj.get(), proto))
@@ -235,7 +235,7 @@ cdef class Mixin2(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(Mixin2 self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(Mixin2 self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cMixin2](self._cpp_obj.get(), proto))
@@ -323,7 +323,7 @@ cdef class Mixin3Base(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(Mixin3Base self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(Mixin3Base self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cMixin3Base](self._cpp_obj.get(), proto))
@@ -451,7 +451,7 @@ cdef class Foo(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 3
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(Foo self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(Foo self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cFoo](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/namespace/gen-py3/hsmodule/types.pyx b/thrift/compiler/test/fixtures/namespace/gen-py3/hsmodule/types.pyx
index 032b830ba..a96046243 100644
--- a/thrift/compiler/test/fixtures/namespace/gen-py3/hsmodule/types.pyx
+++ b/thrift/compiler/test/fixtures/namespace/gen-py3/hsmodule/types.pyx
@@ -132,7 +132,7 @@ cdef class HsFoo(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(HsFoo self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(HsFoo self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cHsFoo](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/namespace/gen-py3/my/namespacing/test/module/module/types.pyx b/thrift/compiler/test/fixtures/namespace/gen-py3/my/namespacing/test/module/module/types.pyx
index 8e03e5b8e..f61844ecb 100644
--- a/thrift/compiler/test/fixtures/namespace/gen-py3/my/namespacing/test/module/module/types.pyx
+++ b/thrift/compiler/test/fixtures/namespace/gen-py3/my/namespacing/test/module/module/types.pyx
@@ -132,7 +132,7 @@ cdef class Foo(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(Foo self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(Foo self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cFoo](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/optionals/gen-py3/module/types.pyx b/thrift/compiler/test/fixtures/optionals/gen-py3/module/types.pyx
index 9307a905a..05bb573af 100644
--- a/thrift/compiler/test/fixtures/optionals/gen-py3/module/types.pyx
+++ b/thrift/compiler/test/fixtures/optionals/gen-py3/module/types.pyx
@@ -192,7 +192,7 @@ cdef class Color(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 4
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(Color self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(Color self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cColor](self._cpp_obj.get(), proto))
@@ -312,7 +312,7 @@ cdef class Vehicle(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 5
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(Vehicle self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(Vehicle self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cVehicle](self._cpp_obj.get(), proto))
@@ -480,7 +480,7 @@ cdef class Person(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 10
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(Person self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(Person self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cPerson](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/py3/gen-py3/module/types.pyx b/thrift/compiler/test/fixtures/py3/gen-py3/module/types.pyx
index 93fd699b7..aa4bf1ba8 100644
--- a/thrift/compiler/test/fixtures/py3/gen-py3/module/types.pyx
+++ b/thrift/compiler/test/fixtures/py3/gen-py3/module/types.pyx
@@ -326,7 +326,7 @@ cdef class OptionalRefStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(OptionalRefStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(OptionalRefStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cOptionalRefStruct](self._cpp_obj.get(), proto))
@@ -450,7 +450,7 @@ cdef class SimpleStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 7
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(SimpleStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(SimpleStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cSimpleStruct](self._cpp_obj.get(), proto))
@@ -592,7 +592,7 @@ cdef class ComplexStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 9
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(ComplexStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(ComplexStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cComplexStruct](self._cpp_obj.get(), proto))
@@ -700,7 +700,7 @@ cdef class BinaryUnion(thrift.py3.types.Union):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(BinaryUnion self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(BinaryUnion self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cBinaryUnion](self._cpp_obj.get(), proto))
@@ -787,7 +787,7 @@ cdef class BinaryUnionStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(BinaryUnionStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(BinaryUnionStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cBinaryUnionStruct](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/qualified/gen-py3/module0/types.pyx b/thrift/compiler/test/fixtures/qualified/gen-py3/module0/types.pyx
index 579bf424d..2ce7d8480 100644
--- a/thrift/compiler/test/fixtures/qualified/gen-py3/module0/types.pyx
+++ b/thrift/compiler/test/fixtures/qualified/gen-py3/module0/types.pyx
@@ -180,7 +180,7 @@ cdef class Struct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(Struct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(Struct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cStruct](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/qualified/gen-py3/module1/types.pyx b/thrift/compiler/test/fixtures/qualified/gen-py3/module1/types.pyx
index 540ebc813..29abc52bd 100644
--- a/thrift/compiler/test/fixtures/qualified/gen-py3/module1/types.pyx
+++ b/thrift/compiler/test/fixtures/qualified/gen-py3/module1/types.pyx
@@ -180,7 +180,7 @@ cdef class Struct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(Struct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(Struct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cStruct](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/qualified/gen-py3/module2/types.pyx b/thrift/compiler/test/fixtures/qualified/gen-py3/module2/types.pyx
index 0a3422d5a..784824a12 100644
--- a/thrift/compiler/test/fixtures/qualified/gen-py3/module2/types.pyx
+++ b/thrift/compiler/test/fixtures/qualified/gen-py3/module2/types.pyx
@@ -146,7 +146,7 @@ cdef class Struct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(Struct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(Struct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cStruct](self._cpp_obj.get(), proto))
@@ -242,7 +242,7 @@ cdef class BigStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(BigStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(BigStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cBigStruct](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/refs/gen-py3/module/types.pyx b/thrift/compiler/test/fixtures/refs/gen-py3/module/types.pyx
index f8a856ab5..458288c29 100644
--- a/thrift/compiler/test/fixtures/refs/gen-py3/module/types.pyx
+++ b/thrift/compiler/test/fixtures/refs/gen-py3/module/types.pyx
@@ -309,7 +309,7 @@ cdef class MyUnion(thrift.py3.types.Union):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(MyUnion self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(MyUnion self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cMyUnion](self._cpp_obj.get(), proto))
@@ -447,7 +447,7 @@ cdef class MyField(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 6
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(MyField self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(MyField self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cMyField](self._cpp_obj.get(), proto))
@@ -556,7 +556,7 @@ cdef class MyStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 3
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(MyStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(MyStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cMyStruct](self._cpp_obj.get(), proto))
@@ -664,7 +664,7 @@ cdef class StructWithUnion(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 3
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(StructWithUnion self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(StructWithUnion self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cStructWithUnion](self._cpp_obj.get(), proto))
@@ -756,7 +756,7 @@ cdef class RecursiveStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(RecursiveStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(RecursiveStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cRecursiveStruct](self._cpp_obj.get(), proto))
@@ -892,7 +892,7 @@ cdef class StructWithContainers(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 6
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(StructWithContainers self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(StructWithContainers self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cStructWithContainers](self._cpp_obj.get(), proto))
@@ -1001,7 +1001,7 @@ cdef class StructWithSharedConst(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 3
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(StructWithSharedConst self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(StructWithSharedConst self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cStructWithSharedConst](self._cpp_obj.get(), proto))
@@ -1076,7 +1076,7 @@ cdef class Empty(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 0
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(Empty self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(Empty self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cEmpty](self._cpp_obj.get(), proto))
@@ -1185,7 +1185,7 @@ cdef class StructWithRef(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 3
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(StructWithRef self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(StructWithRef self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cStructWithRef](self._cpp_obj.get(), proto))
@@ -1294,7 +1294,7 @@ cdef class StructWithRefTypeUnique(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 3
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(StructWithRefTypeUnique self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(StructWithRefTypeUnique self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cStructWithRefTypeUnique](self._cpp_obj.get(), proto))
@@ -1403,7 +1403,7 @@ cdef class StructWithRefTypeShared(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 3
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(StructWithRefTypeShared self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(StructWithRefTypeShared self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cStructWithRefTypeShared](self._cpp_obj.get(), proto))
@@ -1512,7 +1512,7 @@ cdef class StructWithRefTypeSharedConst(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 3
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(StructWithRefTypeSharedConst self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(StructWithRefTypeSharedConst self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cStructWithRefTypeSharedConst](self._cpp_obj.get(), proto))
@@ -1603,7 +1603,7 @@ cdef class StructWithRefAndAnnotCppNoexceptMoveCtor(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(StructWithRefAndAnnotCppNoexceptMoveCtor self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(StructWithRefAndAnnotCppNoexceptMoveCtor self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cStructWithRefAndAnnotCppNoexceptMoveCtor](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/req-opt/gen-py3/module/types.pyx b/thrift/compiler/test/fixtures/req-opt/gen-py3/module/types.pyx
index 9a307f947..ab313bc6e 100644
--- a/thrift/compiler/test/fixtures/req-opt/gen-py3/module/types.pyx
+++ b/thrift/compiler/test/fixtures/req-opt/gen-py3/module/types.pyx
@@ -156,7 +156,7 @@ cdef class Foo(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 4
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(Foo self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(Foo self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cFoo](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/sink/gen-py3/module/types.pyx b/thrift/compiler/test/fixtures/sink/gen-py3/module/types.pyx
index 856ec10a2..e4e3cf963 100644
--- a/thrift/compiler/test/fixtures/sink/gen-py3/module/types.pyx
+++ b/thrift/compiler/test/fixtures/sink/gen-py3/module/types.pyx
@@ -132,7 +132,7 @@ cdef class InitialResponse(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(InitialResponse self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(InitialResponse self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cInitialResponse](self._cpp_obj.get(), proto))
@@ -220,7 +220,7 @@ cdef class FinalResponse(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(FinalResponse self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(FinalResponse self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cFinalResponse](self._cpp_obj.get(), proto))
@@ -308,7 +308,7 @@ cdef class SinkPayload(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(SinkPayload self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(SinkPayload self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cSinkPayload](self._cpp_obj.get(), proto))
@@ -396,7 +396,7 @@ cdef class CompatibleWithKeywordSink(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(CompatibleWithKeywordSink self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(CompatibleWithKeywordSink self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cCompatibleWithKeywordSink](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/templated-deserialize/gen-py3/module/types.pyx b/thrift/compiler/test/fixtures/templated-deserialize/gen-py3/module/types.pyx
index 7b477d5e0..8cc66490e 100644
--- a/thrift/compiler/test/fixtures/templated-deserialize/gen-py3/module/types.pyx
+++ b/thrift/compiler/test/fixtures/templated-deserialize/gen-py3/module/types.pyx
@@ -180,7 +180,7 @@ cdef class SmallStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(SmallStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(SmallStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cSmallStruct](self._cpp_obj.get(), proto))
@@ -435,7 +435,7 @@ cdef class containerStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 22
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(containerStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(containerStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[ccontainerStruct](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/transitive-deps/gen-py3/a/types.pyx b/thrift/compiler/test/fixtures/transitive-deps/gen-py3/a/types.pyx
index 914c08ea9..caa014248 100644
--- a/thrift/compiler/test/fixtures/transitive-deps/gen-py3/a/types.pyx
+++ b/thrift/compiler/test/fixtures/transitive-deps/gen-py3/a/types.pyx
@@ -146,7 +146,7 @@ cdef class A(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(A self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(A self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cA](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/transitive-deps/gen-py3/c/types.pyx b/thrift/compiler/test/fixtures/transitive-deps/gen-py3/c/types.pyx
index 22be27dff..714b02f84 100644
--- a/thrift/compiler/test/fixtures/transitive-deps/gen-py3/c/types.pyx
+++ b/thrift/compiler/test/fixtures/transitive-deps/gen-py3/c/types.pyx
@@ -132,7 +132,7 @@ cdef class C(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(C self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(C self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cC](self._cpp_obj.get(), proto))
diff --git a/thrift/compiler/test/fixtures/types/gen-py3/module/types.pyx b/thrift/compiler/test/fixtures/types/gen-py3/module/types.pyx
index db68ba637..eaf360a90 100644
--- a/thrift/compiler/test/fixtures/types/gen-py3/module/types.pyx
+++ b/thrift/compiler/test/fixtures/types/gen-py3/module/types.pyx
@@ -336,7 +336,7 @@ cdef class decorated_struct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(decorated_struct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(decorated_struct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cdecorated_struct](self._cpp_obj.get(), proto))
@@ -484,7 +484,7 @@ cdef class ContainerStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 8
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(ContainerStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(ContainerStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cContainerStruct](self._cpp_obj.get(), proto))
@@ -574,7 +574,7 @@ cdef class CppTypeStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(CppTypeStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(CppTypeStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cCppTypeStruct](self._cpp_obj.get(), proto))
@@ -662,7 +662,7 @@ cdef class VirtualStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(VirtualStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(VirtualStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cVirtualStruct](self._cpp_obj.get(), proto))
@@ -760,7 +760,7 @@ cdef class MyStructWithForwardRefEnum(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(MyStructWithForwardRefEnum self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(MyStructWithForwardRefEnum self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cMyStructWithForwardRefEnum](self._cpp_obj.get(), proto))
@@ -854,7 +854,7 @@ cdef class TrivialNumeric(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(TrivialNumeric self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(TrivialNumeric self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cTrivialNumeric](self._cpp_obj.get(), proto))
@@ -950,7 +950,7 @@ cdef class TrivialNestedWithDefault(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(TrivialNestedWithDefault self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(TrivialNestedWithDefault self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cTrivialNestedWithDefault](self._cpp_obj.get(), proto))
@@ -1046,7 +1046,7 @@ cdef class ComplexString(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(ComplexString self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(ComplexString self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cComplexString](self._cpp_obj.get(), proto))
@@ -1142,7 +1142,7 @@ cdef class ComplexNestedWithDefault(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(ComplexNestedWithDefault self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(ComplexNestedWithDefault self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cComplexNestedWithDefault](self._cpp_obj.get(), proto))
@@ -1254,7 +1254,7 @@ cdef class MinPadding(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 5
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(MinPadding self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(MinPadding self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cMinPadding](self._cpp_obj.get(), proto))
@@ -1357,7 +1357,7 @@ cdef class MyStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 4
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(MyStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(MyStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cMyStruct](self._cpp_obj.get(), proto))
@@ -1427,7 +1427,7 @@ cdef class MyDataItem(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 0
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(MyDataItem self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(MyDataItem self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cMyDataItem](self._cpp_obj.get(), proto))
@@ -1515,7 +1515,7 @@ cdef class Renaming(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(Renaming self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(Renaming self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cRenaming](self._cpp_obj.get(), proto))
@@ -1613,7 +1613,7 @@ cdef class AnnotatedTypes(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(AnnotatedTypes self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(AnnotatedTypes self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cAnnotatedTypes](self._cpp_obj.get(), proto))
@@ -1714,7 +1714,7 @@ cdef class ForwardUsageRoot(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(ForwardUsageRoot self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(ForwardUsageRoot self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cForwardUsageRoot](self._cpp_obj.get(), proto))
@@ -1806,7 +1806,7 @@ cdef class ForwardUsageStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(ForwardUsageStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(ForwardUsageStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cForwardUsageStruct](self._cpp_obj.get(), proto))
@@ -1898,7 +1898,7 @@ cdef class ForwardUsageByRef(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(ForwardUsageByRef self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(ForwardUsageByRef self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cForwardUsageByRef](self._cpp_obj.get(), proto))
@@ -1973,7 +1973,7 @@ cdef class NoexceptMoveEmpty(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 0
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(NoexceptMoveEmpty self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(NoexceptMoveEmpty self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cNoexceptMoveEmpty](self._cpp_obj.get(), proto))
@@ -2061,7 +2061,7 @@ cdef class NoexceptMoveSimpleStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(NoexceptMoveSimpleStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(NoexceptMoveSimpleStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cNoexceptMoveSimpleStruct](self._cpp_obj.get(), proto))
@@ -2203,7 +2203,7 @@ cdef class NoexceptMoveComplexStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 9
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(NoexceptMoveComplexStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(NoexceptMoveComplexStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cNoexceptMoveComplexStruct](self._cpp_obj.get(), proto))
@@ -2344,7 +2344,7 @@ cdef class NoExceptMoveUnion(thrift.py3.types.Union):
     def __cinit__(self):
         self._fbthrift_struct_size = 2
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(NoExceptMoveUnion self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(NoExceptMoveUnion self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cNoExceptMoveUnion](self._cpp_obj.get(), proto))
@@ -2464,7 +2464,7 @@ cdef class AllocatorAware(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 5
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(AllocatorAware self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(AllocatorAware self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cAllocatorAware](self._cpp_obj.get(), proto))
@@ -2552,7 +2552,7 @@ cdef class AllocatorAware2(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(AllocatorAware2 self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(AllocatorAware2 self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cAllocatorAware2](self._cpp_obj.get(), proto))
@@ -2652,7 +2652,7 @@ cdef class TypedefStruct(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 3
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(TypedefStruct self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(TypedefStruct self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cTypedefStruct](self._cpp_obj.get(), proto))
@@ -2740,7 +2740,7 @@ cdef class StructWithDoubleUnderscores(thrift.py3.types.Struct):
     def __cinit__(self):
         self._fbthrift_struct_size = 1
 
-    cdef _fbthrift_iobuf.IOBuf _serialize(StructWithDoubleUnderscores self, __Protocol proto):
+    cdef _fbthrift_iobuf.IOBuf _serialize_(StructWithDoubleUnderscores self, __Protocol proto):
         cdef unique_ptr[_fbthrift_iobuf.cIOBuf] data
         with nogil:
             data = cmove(serializer.cserialize[cStructWithDoubleUnderscores](self._cpp_obj.get(), proto))
diff --git a/thrift/lib/py3/serializer.pyx b/thrift/lib/py3/serializer.pyx
index b6fbb96cd..89b04b7e9 100644
--- a/thrift/lib/py3/serializer.pyx
+++ b/thrift/lib/py3/serializer.pyx
@@ -27,7 +27,7 @@ def serialize_iobuf(Struct tstruct not None, protocol=Protocol.COMPACT):
     if not isinstance(protocol, Protocol):
         raise TypeError(f"{protocol} must of type Protocol")
     cdef Struct cy_struct = <Struct> tstruct
-    return cy_struct._serialize(protocol)
+    return cy_struct._serialize_(protocol)
 
 
 def deserialize_with_length(structKlass, buf not None, protocol=Protocol.COMPACT):
diff --git a/thrift/lib/py3/types.pxd b/thrift/lib/py3/types.pxd
index 0f68dc0fe..127178476 100644
--- a/thrift/lib/py3/types.pxd
+++ b/thrift/lib/py3/types.pxd
@@ -141,7 +141,7 @@ cdef class Struct:
     cdef object _fbthrift_hash
     cdef object __weakref__
     cdef size_t _fbthrift_struct_size
-    cdef IOBuf _serialize(self, Protocol proto)
+    cdef IOBuf _serialize_(self, Protocol proto)
     cdef uint32_t _deserialize(self, const cIOBuf* buf, Protocol proto) except? 0
     cdef object _fbthrift_isset(self)
     cdef bint _fbthrift_noncomparable_eq(self, other)
diff --git a/thrift/lib/py3/types.pyx b/thrift/lib/py3/types.pyx
index 9d0658df4..9e10a743c 100644
--- a/thrift/lib/py3/types.pyx
+++ b/thrift/lib/py3/types.pyx
@@ -130,7 +130,7 @@ cdef class Struct:
     """
     Base class for all thrift structs
     """
-    cdef IOBuf _serialize(self, Protocol proto):
+    cdef IOBuf _serialize_(self, Protocol proto):
         return IOBuf(b'')
 
     cdef uint32_t _deserialize(self, const cIOBuf* buf, Protocol proto) except? 0:
diff --git a/thrift/test/JsonToThriftTest/SimpleJSONToThriftTest.py b/thrift/test/JsonToThriftTest/SimpleJSONToThriftTest.py
index a79c69aab..d68830fea 100755
--- a/thrift/test/JsonToThriftTest/SimpleJSONToThriftTest.py
+++ b/thrift/test/JsonToThriftTest/SimpleJSONToThriftTest.py
@@ -134,7 +134,7 @@ class SimpleJSONToThriftTest(unittest.TestCase):
             ll=[myTestStruct(d=float("nan"))],
         )
 
-    def _serialize(self, obj):
+    def _serialize_(self, obj):
         trans = TTransport.TMemoryBuffer()
         prot = TSimpleJSONProtocolFactory().getProtocol(trans)
         obj.write(prot)
@@ -148,7 +148,7 @@ class SimpleJSONToThriftTest(unittest.TestCase):
         else:
             self.assertEqual(gen, struct)
 
-        gen.readFromJson(self._serialize(struct))
+        gen.readFromJson(self._serialize_(struct))
         self.assertEqual(gen, struct)
 
     def _testBadStruct(self, struct, is_empty=False):
@@ -214,7 +214,7 @@ class SimpleJSONToThriftTest(unittest.TestCase):
 
         # Have to test manually because nan != nan
         gen = self.collectionStruct2.__class__()
-        gen.readFromJson(self._serialize(self.collectionStruct2))
+        gen.readFromJson(self._serialize_(self.collectionStruct2))
         self.assertTrue(math.isnan(gen.l[0]))
         self.assertTrue(math.isnan(list(gen.s)[0]))
         self.assertTrue(math.isnan(list(gen.m.values())[0]))
diff --git a/thrift/test/py/SerializationTest.py b/thrift/test/py/SerializationTest.py
index 29510e6ce..147c851dc 100755
--- a/thrift/test/py/SerializationTest.py
+++ b/thrift/test/py/SerializationTest.py
@@ -78,7 +78,7 @@ class AbstractTest():
             },
         )
 
-    def _serialize(self, obj):
+    def _serialize_(self, obj):
         return Serializer.serialize(self.protocol_factory, obj)
 
     def _deserialize(self, objtype, data):
@@ -87,34 +87,34 @@ class AbstractTest():
     def testSimpleJSON(self):
         if not isinstance(self, SimpleJSONTest):
             return
-        json.loads(self._serialize(self.sjtObj))
-        json.loads(self._serialize(self.v1obj))
-        json.loads(self._serialize(self.v2obj))
+        json.loads(self._serialize_(self.sjtObj))
+        json.loads(self._serialize_(self.v1obj))
+        json.loads(self._serialize_(self.v2obj))
 
     def testForwards(self):
         if isinstance(self, SimpleJSONTest):
             return
-        obj = self._deserialize(VersioningTestV2, self._serialize(self.v1obj))
+        obj = self._deserialize(VersioningTestV2, self._serialize_(self.v1obj))
         self.assertEquals(obj.begin_in_both, self.v1obj.begin_in_both)
         self.assertEquals(obj.end_in_both, self.v1obj.end_in_both)
 
     def testUnicodeString(self):
         if isinstance(self, SimpleJSONTest):
             return
-        obj = self._deserialize(VersioningTestV2, self._serialize(self.v2obj))
+        obj = self._deserialize(VersioningTestV2, self._serialize_(self.v2obj))
         bytes_comp(self, obj.newunicodestring, self.v2obj.newunicodestring)
 
     def testBackwards(self):
         if isinstance(self, SimpleJSONTest):
             return
-        obj = self._deserialize(VersioningTestV1, self._serialize(self.v2obj))
+        obj = self._deserialize(VersioningTestV1, self._serialize_(self.v2obj))
         self.assertEquals(obj.begin_in_both, self.v2obj.begin_in_both)
         self.assertEquals(obj.end_in_both, self.v2obj.end_in_both)
 
     def testDouble(self):
         if isinstance(self, SimpleJSONTest):
             return
-        obj = self._deserialize(VersioningTestV2, self._serialize(self.v2obj))
+        obj = self._deserialize(VersioningTestV2, self._serialize_(self.v2obj))
         self.assertEquals(obj.newdouble, self.v2obj.newdouble)
 
 class NormalBinaryTest(AbstractTest, unittest.TestCase):
@@ -172,7 +172,7 @@ class JSONProtocolTest(AbstractTest, unittest.TestCase):
 
     def testNestedStructs(self):
         nested = NestedStructs(bonk=Bonk(), bools=Bools())
-        json.loads(self._serialize(nested))
+        json.loads(self._serialize_(nested))
         # Old protocol should be able to deserialize both valid and invalid
         # JSON.
         protocol_factory = TJSONProtocol.TJSONProtocolFactory(validJSON=False)
@@ -195,7 +195,7 @@ class HeaderDefaultFactory(THeaderProtocol.THeaderProtocolFactory):
 
 class HeaderTest(AbstractTest):
 
-    def _serialize(self, obj):
+    def _serialize_(self, obj):
         return Serializer.serialize(self.serialize_factory, obj)
 
     def _deserialize(self, objtype, data):
diff --git a/thrift/test/py/UTF8StringTest.py b/thrift/test/py/UTF8StringTest.py
index 0474af4b2..add95c82e 100644
--- a/thrift/test/py/UTF8StringTest.py
+++ b/thrift/test/py/UTF8StringTest.py
@@ -33,7 +33,7 @@ class AbstractTest():
             hello=u"hello\xac\u1234\u20ac\U00008000"
         )
 
-    def _serialize(self, obj):
+    def _serialize_(self, obj):
         return Serializer.serialize(self.protocol_factory, obj)
 
     def _deserialize(self, objtype, data):
@@ -41,7 +41,7 @@ class AbstractTest():
 
     def testUnicodeString(self):
         obj2 = self._deserialize(ListTypeVersioningV2,
-                self._serialize(self.obj))
+                self._serialize_(self.obj))
         self.assertEquals(obj2.strings[0], self.obj.strings[0])
         self.assertEquals(obj2.strings[1], self.obj.strings[1])
         self.assertEquals(obj2.hello, self.obj.hello)
-- 
2.27.0

